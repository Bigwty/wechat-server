<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.wechat.server.mapper.GroupMapper">

    <resultMap id="group" type="com.bc.wechat.server.entity.Group">
        <result property="groupId" column="group_id" jdbcType="VARCHAR"/>
        <result property="owner" column="group_owner" jdbcType="VARCHAR"/>
        <result property="name" column="group_name" jdbcType="VARCHAR"/>
        <result property="desc" column="group_desc" jdbcType="VARCHAR"/>
        <result property="createTime" column="group_create_time" jdbcType="VARCHAR"/>
        <result property="updateTime" column="group_update_time" jdbcType="VARCHAR"/>
        <result property="jId" column="group_jim_id" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="groupMembers" type="com.bc.wechat.server.entity.User">
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="userNickName" column="user_nick_name" jdbcType="VARCHAR"/>
        <result property="userPhone" column="user_phone" jdbcType="VARCHAR"/>
        <result property="userAvatar" column="user_avatar" jdbcType="VARCHAR"/>
        <result property="isOwner" column="members_is_owner" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 添加群  -->
    <insert id="addGroup" parameterType="com.bc.wechat.server.entity.Group">
        insert into t_group
        (
            group_id,
            group_owner,
            group_name,
            group_desc,
            group_create_time,
            group_update_time,
            group_jim_id
        )
        values
        (
            #{groupId},
            #{owner},
            #{name},
            #{desc},
            now(),
            now(),
            #{jId}
        )
    </insert>

    <!-- 添加群用户  -->
    <insert id="addGroupMembers" parameterType="List">
        insert into t_group_members
        (
        members_id,
        members_group_id,
        members_user_id,
        members_is_owner,
        members_create_time
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.groupId},
            #{item.userId},
            #{item.isOwner},
            now()
            )
        </foreach>
    </insert>

    <!-- 修改群名  -->
    <update id="updateGroupName" parameterType="map">
        update t_group
          set group_name = #{groupName},
              group_desc = #{groupDesc}
            where group_jim_id = #{gId}
    </update>

    <select id="getGroupInfo" resultMap="group">
        select *
          from t_group
            where group_jim_id = #{gId}
    </select>

    <select id="getGroupMembers" parameterType="String" resultMap="groupMembers">
        select u.*, gm.members_is_owner
          from t_group_members gm left join t_user u on gm.members_user_id = u.user_id
            where gm.members_group_id = #{groupId}
    </select>

    <delete id="deleteGroupMembersForRemoveMembers" parameterType="map">
        delete from t_group_members
          where members_group_id = #{groupId}
            and members_user_id = #{userId}
    </delete>
</mapper>